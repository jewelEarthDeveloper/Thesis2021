@startuml 
    skinparam ClassFontSize 22
    skinparam ClassAttributeFontSize 22
    skinparam ArrowFontSize 24

    class RulesFile
        RulesFile : String name
        RulesFile : ImportType[] imports
        RulesFile : Global[] globals
        RulesFile : Rule[] rules

    class Fact
        Fact : String className
        Fact : String classLocation?

    class Global
        Global : String variableName
        Global : String className

    class Rule
        Rule : String name
        Rule : LHS lhs
        Rule : RHS rhs
        Rule : AttributeCollection attributes

    RulesFile *-right- "0..n" Fact
    RulesFile *-left- "0..n" Global
    RulesFile *-down- "0..n" Rule

    class AttributeCollection
        AttributeCollection : NoLoopAttribute noLoop
        AttributeCollection : SalienceAttribute salience

    class NoLoopAttribute
        NoLoopAttribute : Boolean value

    class SalienceAttribute
        SalienceAttribute : Integer value

    AttributeCollection *-- "0..1" NoLoopAttribute 
    SalienceAttribute --* "1..0" AttributeCollection

    class RHS
        RHS : BaseLanguage code
        RHS : RuleVariable[] variables

    Rule *-down- "0..1" LHS
    Rule *-left- "0..1" RHS
    Rule *-right- "1..1" AttributeCollection

    class LHS
        LHS : Condition[] conditions

    abstract Condition

    class AndCondition
        AndCondition : Condition lhs
        AndCondition : Condition rhs

    class OrCondition
        OrCondition : Condition lhs
        OrCondition : Condition rhs

    class NotCondition 
        NotCondition : Condition condition

    class ExistsCondition
        ExistsCondition : FactSelector selector

    LHS *-- "0..n" Condition

    Condition <|-- AndCondition
    Condition <|-- OrCondition
    Condition <|-- NotCondition 
    Condition <|-- ExistsCondition

    class FactSelector  
        FactSelector : RuleVariable variable
        FactSelector : Fact type
        FactSelector : Constraint[] constraints

    ExistsCondition *-- "0..n" FactSelector

    class "RuleVariable" as ruleVariable1 
   
    FactSelector *-- "0..1" ruleVariable1
    RHS ....  ruleVariable1
    Global .. RHS

    Fact *..... "1..1" FactSelector

    abstract Constraint

    FactSelector *-- "0..n" Constraint

    class ConstraintGroup
        ConstraintGroup : Constraint[] constraints
        ConstraintGroup : Connective connective

    ConstraintGroup *-- "1..2" Constraint
	ConstraintGroup --|> Constraint
    
    enum Connective
        Connective : And
        Connective : Or

    Connective --* "0..1" ConstraintGroup

    class FieldConstraint
        FieldConstraint : FieldName fieldName
        FieldConstraint : Restriction restriction
        FieldConstraint : RuleVariable variable


    class "RuleVariable" as ruleVariable2 
   
    FieldConstraint *-- "0..1" ruleVariable2
   
    class FieldName

    FieldConstraint *-- "1..1" FieldName

    abstract Restriction
    
    FieldConstraint *-- "1..1" Restriction

    class SingleValueRestriction 
        SingleValueRestriction : OperatorType operator
        SingleValueRestriction : RestrictionValue value

    enum OperatorType
		OperatorType : GreaterThan
		OperatorType : GreaterThanEqual
		OperatorType : LessThan
		OperatorType : LessThanEquals
		OperatorType : Equals
		OperatorType : NotEquals
		OperatorType : Contains

    SingleValueRestriction *-- "1..1" OperatorType

    abstract RestrictionValue

    SingleValueRestriction *-- "1..1" RestrictionValue

    abstract LiteralRestrictionValue

    class NumericLiteral
    class DateLiteral
    class StringLiteral
    class BooleanLiteral

    LiteralRestrictionValue <|-- NumericLiteral
    LiteralRestrictionValue <|-- DateLiteral
    LiteralRestrictionValue <|-- StringLiteral
    LiteralRestrictionValue <|-- BooleanLiteral

    class VariableRestrictionValue
    class ReturnValueRestrictionValue
    class QualifiedIdentifierRestrictionValue
    
    VariableRestrictionValue --|> RestrictionValue
    ruleVariable1 .... VariableRestrictionValue
    ruleVariable2 .... VariableRestrictionValue
    Global .... VariableRestrictionValue

    RestrictionValue <|-- LiteralRestrictionValue
    RestrictionValue <|-- ReturnValueRestrictionValue
    RestrictionValue <|-- QualifiedIdentifierRestrictionValue

    class CompoundValueRestriction
        CompoundValueRestriction : SetMembership membership

    abstract SetMembership
        SetMembership : RestrictionValue[] values

    CompoundValueRestriction *-- "1..1" SetMembership
    SetMembership *-- "0..n" RestrictionValue

    class InSet

    InSet --|> SetMembership

    class MultiRestriction
        MultiRestriction : Restriction[] restrictions
        MultiRestriction : RestrictionGroup[] groups

    MultiRestriction *-- "0..n" Restriction

    class RestrictionGroup
        RestrictionGroup : Restriction[] restrictions

    MultiRestriction *-- "0..n" RestrictionGroup
    RestrictionGroup *-- "0..n" Restriction

    Restriction <|-- SingleValueRestriction
    Restriction <|-- CompoundValueRestriction
    Restriction <|-- MultiRestriction
    
	Constraint <|-- FieldConstraint
@endumld