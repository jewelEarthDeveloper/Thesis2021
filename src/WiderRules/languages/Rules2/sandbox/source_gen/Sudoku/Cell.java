package Sudoku;

/*Generated by MPS */

import java.util.Set;
import java.util.HashSet;

public class Cell extends SetOfNine {
  private Integer value;
  private CellRow cellRow;
  private CellCol cellCol;
  private CellSqr cellSqr;
  private Set<Cell> exCells;

  public Cell() {
    super();
  }

  public void makeReferences(CellRow row, CellCol col, CellSqr sqr) {
    this.cellRow = row;
    this.cellCol = col;
    this.cellSqr = sqr;
    this.exCells = new HashSet<Cell>();
    this.exCells.addAll(this.cellRow.getCells());
    this.exCells.addAll(this.cellCol.getCells());
    this.exCells.addAll(this.cellSqr.getCells());
    this.exCells.remove(this);
  }

  public Integer getValue() {
    return value;
  }

  public void setValue(Integer value) {
    blockExcept();
    this.value = value;
  }

  public Set<Cell> getExCells() {
    return exCells;
  }

  public CellRow getCellRow() {
    return cellRow;
  }

  public int getRowNo() {
    return cellRow.getNumber();
  }

  public CellCol getCellCol() {
    return cellCol;
  }

  public int getColNo() {
    return cellCol.getNumber();
  }

  public CellSqr getCellSqr() {
    return cellSqr;
  }

  @Override
  public String toString() {
    return posAsString() + ": " + valueAsString();
  }

  public String valueAsString() {
    return (value == null ? " " : value.toString());
  }

  public String posAsString() {
    return "[" + ((cellRow != null ? cellRow.getNumber() : "null")) + "," + ((cellCol != null ? cellCol.getNumber() : "null")) + "]";
  }
}
