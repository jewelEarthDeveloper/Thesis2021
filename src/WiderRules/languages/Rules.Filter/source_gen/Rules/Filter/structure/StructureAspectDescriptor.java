package Rules.Filter.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptFilterContainer = createDescriptorForFilterContainer();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.aggregatedLanguage(0x17e7b90aaaca44c7L, 0xaaaa8155bb498bd7L, "Rules2");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptFilterContainer);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.FilterContainer:
        return myConceptFilterContainer;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForFilterContainer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Rules.Filter", "FilterContainer", 0xf3353dc83c784e44L, 0xb056b8942417b777L, 0x18c68f981c69c208L);
    b.class_(false, false, false);
    b.parent(0x17e7b90aaaca44c7L, 0xaaaa8155bb498bd7L, 0x7e19241b9e5efb81L);
    b.origin("r:7283a897-1f97-46a3-b131-eb87ea47f7de(Rules.Filter.structure)/1785272185773474312");
    b.version(2);
    b.aggregate("facts", 0x18c68f981c69c209L).target(0x17e7b90aaaca44c7L, 0xaaaa8155bb498bd7L, 0x7e19241b9e725f44L).optional(true).ordered(true).multiple(true).origin("1785272185773474313").done();
    b.alias("filter");
    return b.create();
  }
}
