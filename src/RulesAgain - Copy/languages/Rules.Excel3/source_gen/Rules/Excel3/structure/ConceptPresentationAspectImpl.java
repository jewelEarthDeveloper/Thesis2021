package Rules.Excel3.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_EmptyCell;
  private ConceptPresentation props_FactExists;
  private ConceptPresentation props_IntelligentEmptyCell;
  private ConceptPresentation props_RuleCollection;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.EmptyCell:
        if (props_EmptyCell == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("EmptyCell");
          props_EmptyCell = cpb.create();
        }
        return props_EmptyCell;
      case LanguageConceptSwitch.FactExists:
        if (props_FactExists == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("FactExists");
          props_FactExists = cpb.create();
        }
        return props_FactExists;
      case LanguageConceptSwitch.IntelligentEmptyCell:
        if (props_IntelligentEmptyCell == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("IntelligentEmptyCell");
          props_IntelligentEmptyCell = cpb.create();
        }
        return props_IntelligentEmptyCell;
      case LanguageConceptSwitch.RuleCollection:
        if (props_RuleCollection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_RuleCollection = cpb.create();
        }
        return props_RuleCollection;
    }
    return null;
  }
}
