package Rules.Excel2.intentions;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import de.slisson.mps.tables.runtime.simplegrid.GridPosition;
import Rules.Excel2.editor.HeaderValue;
import jetbrains.mps.internal.collections.runtime.Sequence;
import Rules.Excel2.behavior.RuleCollection__BehaviorDescriptor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import java.util.Objects;
import de.slisson.mps.tables.runtime.cells.EditorCell_GridCell;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class DecisionTableUtil {
  public static String getPropertyFromGridPosition(EditorContext context, SNode rule) {
    if (!(hasProperty(context, rule))) {
      return "*** NO PROPERTY ***";
    } else {
      {
        final SNode collection = SNodeOperations.getParent(rule);
        if (SNodeOperations.isInstanceOf(collection, CONCEPTS.RuleCollection$bT)) {

          GridPosition pos = getGridPosition(context);

          HeaderValue hv = Sequence.fromIterable(RuleCollection__BehaviorDescriptor.getDecisionTableHeaders_id6Y4UEk_vXaO.invoke(collection)).toGenericArray(HeaderValue.class)[pos.getY() - 1];
          return hv.getProperty();
        }
      }
      return "THIS IS WRONG";
    }
  }

  public static boolean hasProperty(EditorContext context, SNode rule) {
    GridPosition pos = getGridPosition(context);
    {
      final SNode collection = SNodeOperations.getParent(rule);
      if (SNodeOperations.isInstanceOf(collection, CONCEPTS.RuleCollection$bT)) {
        HeaderValue hv = Sequence.fromIterable(RuleCollection__BehaviorDescriptor.getDecisionTableHeaders_id6Y4UEk_vXaO.invoke(collection)).toGenericArray(HeaderValue.class)[pos.getX() - 1];

        return isNotEmptyString(hv.getProperty());
      }
    }

    return false;
  }

  private static GridPosition getGridPosition(EditorContext editorContext) {
    EditorCell eCell = editorContext.getSelectedCell();
    while (!(Objects.equals(eCell.getParent(), null))) {
      if (eCell.getParent() instanceof EditorCell_GridCell) {
        EditorCell_GridCell gCell = as_mqc8iy_a0a0a0a1a4(eCell.getParent(), EditorCell_GridCell.class);
        return gCell.getGridPosition();
      }
      eCell = eCell.getParent();
    }

    return null;
  }

  private static boolean isNotEmptyString(String str) {
    return str != null && str.length() > 0;
  }
  private static <T> T as_mqc8iy_a0a0a0a1a4(Object o, Class<T> type) {
    return (type.isInstance(o) ? (T) o : null);
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept RuleCollection$bT = MetaAdapterFactory.getConcept(0x903686680b064529L, 0xa25ba5999072a9a0L, 0x61719c7b08847c63L, "Rules.Excel2.structure.RuleCollection");
  }
}
